==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=89, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=92, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="#")], member=contains, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=96, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=100, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='_'), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=101, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=106, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isUpperCase, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isUpperCase, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=109, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=112, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=115, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='_'), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=121, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isLowerCase, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isLowerCase, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=124, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=127, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=130, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='_'), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=134, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch3, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='_'), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=138, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ch3, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isUpperCase, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=ch4, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isUpperCase, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=141, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=144, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=147, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='_'), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=190, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=locale, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=192, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getVariant, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[MethodInvocation(arguments=[], member=length, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=195, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getCountry, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[MethodInvocation(arguments=[], member=length, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=198, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=defaultLocale, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=255, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=countryCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=259, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=langs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=262, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=264, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getCountry, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[], type_arguments=None)], member=equals, postfix_operators=[], prefix_operators=[], qualifier=countryCode, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getVariant, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[MethodInvocation(arguments=[], member=isEmpty, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=287, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=languageCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=291, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=countries, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=294, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.LocaleUtils
Line: Position(line=296, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getLanguage, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[], type_arguments=None)], member=equals, postfix_operators=[], prefix_operators=[], qualifier=languageCode, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getCountry, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[MethodInvocation(arguments=[], member=length, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=getVariant, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[MethodInvocation(arguments=[], member=isEmpty, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=79, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=105, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=in, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=132, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=outputStream, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=145, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=out, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=201, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=inputStream, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=220, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=in, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=250, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=objectData, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SerializationUtils
Line: Position(line=314, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=80, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=digit, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=101, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=hexDigit, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=161, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=hexDigit, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=221, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=hexDigit, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=301, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=304, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=305, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=306, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=307, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=313, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=320, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=321, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=327, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=335, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=336, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=337, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=343, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=350, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=351, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=357, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=404, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=407, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=413, column=9)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=414, column=13)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=415, column=17)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=416, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=422, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=429, column=17)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=430, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=436, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=444, column=13)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=445, column=17)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=446, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=452, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=459, column=17)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=460, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=466, column=21)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=512, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=521, column=9)
Node Type: IfStatement
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=522, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=523, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=524, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=530, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=537, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=538, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=544, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=552, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=553, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=554, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=560, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=567, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=568, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=574, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=+, prefix_operators=None))]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=604, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=629, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=nibble, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=685, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nInts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=688, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nInts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=694, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=722, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=725, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=731, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=759, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=762, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=768, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=796, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=799, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=805, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=832, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=835, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=841, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=869, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=872, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=878, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=903, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=906, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=912, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=937, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=940, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=946, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=971, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=974, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=980, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1005, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1008, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1014, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1042, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1045, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1051, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1053, column=31)
Node Type: TernaryExpression
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1078, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1081, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1087, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1089, column=30)
Node Type: TernaryExpression
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1115, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1118, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1124, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1126, column=30)
Node Type: TernaryExpression
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1152, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1155, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1160, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1162, column=30)
Node Type: TernaryExpression
Condition: MemberReference(member=src, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1187, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nInts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1190, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nInts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1195, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1221, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1224, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1229, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1255, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1258, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nShorts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1263, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1289, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1292, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1297, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1322, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1325, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1330, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1356, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1359, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1364, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1388, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1391, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1398, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1401, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MemberReference(member=append, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1428, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1431, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1438, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1441, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MemberReference(member=append, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1468, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1471, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1478, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1481, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MemberReference(member=append, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1508, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1511, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nHexs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=*, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1518, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1521, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=dstPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MemberReference(member=append, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1550, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1553, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1558, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1584, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1587, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1592, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1618, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1621, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1627, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1653, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1656, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nBools, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1660, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1684, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operandr=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1687, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1690, column=71)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1691, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nBytes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Conversion
Line: Position(line=1711, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=src, selectors=[]), operandr=MemberReference(member=srcPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SystemUtils
Line: Position(line=758, column=47)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="user.country")], member=getSystemProperty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SystemUtils
Line: Position(line=1369, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=JAVA_AWT_HEADLESS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SystemUtils
Line: Position(line=1404, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=version, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SystemUtils
Line: Position(line=1423, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=osName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=osVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.SystemUtils
Line: Position(line=1440, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=osName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=257, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=260, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=261, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isWhitespace, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=315, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=342, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=ts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=367, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=422, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=426, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=452, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=482, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=515, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=519, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=stripChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=520, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=isWhitespace, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=523, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=stripChars, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=526, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=stripChars, selectors=[], type_arguments=None), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=560, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=564, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=stripChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=565, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=isWhitespace, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=568, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=stripChars, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=571, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=stripChars, selectors=[], type_arguments=None), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=630, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=strs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=strsLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=strs, selectors=[])), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=634, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=659, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=input, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=692, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=cs2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=695, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=cs2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=698, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=cs2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=726, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=str2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=728, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=str2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=730, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str1, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str2, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=760, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=793, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=824, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchSeq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=864, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchSeq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=923, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ordinal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=926, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=searchStr, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=927, column=20)
Node Type: TernaryExpression
Condition: MemberReference(member=lastIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=930, column=21)
Node Type: TernaryExpression
Condition: MemberReference(member=lastIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=931, column=9)
Node Type: DoStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=ordinal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=932, column=13)
Node Type: IfStatement
Condition: MemberReference(member=lastIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=937, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1007, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1010, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1014, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=endLimit, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1017, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=searchStr, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1020, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1021, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=searchStr, selectors=[], type_arguments=None)], member=regionMatches, postfix_operators=[], prefix_operators=[], qualifier=CharSequenceUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1051, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1089, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1119, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchSeq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1200, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchSeq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1230, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1269, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1272, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=searchStr, selectors=[], type_arguments=None), operator=-, prefix_operators=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1275, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1278, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=searchStr, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1282, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1283, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=searchStr, selectors=[], type_arguments=None)], member=regionMatches, postfix_operators=[], prefix_operators=[], qualifier=CharSequenceUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1313, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1342, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchSeq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1373, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1378, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1379, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=regionMatches, postfix_operators=[], prefix_operators=[], qualifier=CharSequenceUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1396, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1400, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1401, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=seq, selectors=[], type_arguments=None)], member=isWhitespace, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1434, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1441, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1443, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1444, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1445, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=csLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=searchLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isHighSurrogate, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1447, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operandr=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1483, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1516, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1523, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1525, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1526, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1527, column=21)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isHighSurrogate, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1528, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=searchLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1532, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=csLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operandr=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1574, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1607, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1614, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1617, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1618, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1619, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=csLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=searchLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isHighSurrogate, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1620, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operandr=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1657, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1661, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1664, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operandr=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isHighSurrogate, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1666, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chFound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=CharSequenceUtils, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1670, column=17)
Node Type: IfStatement
Condition: MemberReference(member=chFound, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1704, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=valid, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1707, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1710, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=valid, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1740, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=validChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1772, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1779, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1781, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1782, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1783, column=21)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isHighSurrogate, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1784, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=searchLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1788, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=csLast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operandr=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1825, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=invalidChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1861, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchStrs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1870, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1872, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=search, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1876, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tmp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1880, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tmp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=ret, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1885, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=ret, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1915, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchStrs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1921, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1923, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=search, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1927, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tmp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=ret, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1961, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1966, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1970, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=1973, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2016, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2021, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2024, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2029, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2034, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2038, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2041, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2071, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2074, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2077, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2104, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2107, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2110, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2142, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2145, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2148, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2151, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2187, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2190, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=separator, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2194, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2229, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2232, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2236, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2270, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2274, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2310, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2313, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2317, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=separator, selectors=[], type_arguments=None), operator=-, prefix_operators=None), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2378, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=open, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=close, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2382, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2384, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2414, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=open, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=close, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2418, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2425, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=closeLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2427, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2432, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2438, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2702, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2708, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2712, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=EMPTY, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2723, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2726, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2727, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=beg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2730, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numberOfSubstrings, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2745, column=21)
Node Type: IfStatement
Condition: MemberReference(member=preserveAllTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2747, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numberOfSubstrings, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2846, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2850, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2857, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2858, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=separatorChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2859, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=preserveAllTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2871, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=preserveAllTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=lastMatch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=&&, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2973, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2977, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2985, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=separatorChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2987, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2988, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=isWhitespace, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2989, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=preserveAllTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=2991, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=sizePlus1, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3005, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=separatorChars, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3008, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3009, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=sep, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3010, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=preserveAllTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3012, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=sizePlus1, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3028, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3029, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=separatorChars, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3030, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=preserveAllTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3032, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=sizePlus1, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3047, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=preserveAllTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=lastMatch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=&&, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3119, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3122, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3129, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3131, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=currentType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3134, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=camelCase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=LOWERCASE_LETTER, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=currentType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=UPPERCASE_LETTER, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3136, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newTokenStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=tokenStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3201, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3233, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3265, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3297, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3329, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3361, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3393, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3425, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3459, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3463, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3467, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3468, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3471, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3510, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3514, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3518, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3519, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3559, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3563, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3567, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3568, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3608, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3612, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3616, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3617, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3657, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3661, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3665, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3666, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3706, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3710, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3714, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3715, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3755, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3759, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3763, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3764, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3804, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3808, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3812, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3813, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3846, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3888, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3891, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3898, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=noOfItems, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3904, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3905, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3908, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3932, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iterator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3935, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=['!'], qualifier=iterator, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3939, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=['!'], qualifier=iterator, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3945, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=first, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3949, column=9)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=iterator, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3952, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3976, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iterator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3979, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=['!'], qualifier=iterator, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3983, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=['!'], qualifier=iterator, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3989, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=first, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3993, column=9)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=iterator, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3994, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=3998, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4020, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iterable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4041, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iterable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4064, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4070, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4071, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=isWhitespace, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4075, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4108, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4111, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4143, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4146, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWithIgnoreCase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4177, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4180, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4213, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4216, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=endsWithIgnoreCase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4246, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4272, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4277, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4278, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=remove, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4410, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=replacement, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4415, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4420, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=increase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4421, column=21)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4421, column=36)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=64), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4423, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4426, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=max, postfix_operators=[], prefix_operators=['--'], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4525, column=32)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=searchList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4583, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=text, selectors=[], type_arguments=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=searchList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=searchList, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=replacementList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=replacementList, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4589, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=timeToLive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4598, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=replacementLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4615, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4616, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=noMoreMatchesForReplIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=BinaryOperation(operandl=MemberReference(member=searchList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=MemberReference(member=searchList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=isEmpty, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=replacementList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4623, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tempIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4626, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=textIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=tempIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=textIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4635, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=textIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4645, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4646, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=searchList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=replacementList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4650, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=greater, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4659, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=textIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4661, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4673, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4674, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=noMoreMatchesForReplIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=BinaryOperation(operandl=MemberReference(member=searchList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=MemberReference(member=searchList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=isEmpty, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=replacementList, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4681, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tempIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4684, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=textIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=tempIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=textIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4694, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4698, column=9)
Node Type: IfStatement
Condition: MemberReference(member=repeat, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4728, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4771, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4774, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=replaceChars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4781, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4784, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4786, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=replaceCharsLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4793, column=9)
Node Type: IfStatement
Condition: MemberReference(member=modified, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4831, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4834, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=overlay, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4838, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4841, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4844, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4847, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4850, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4890, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4894, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4896, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=CR, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=LF, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4905, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=last, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=LF, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4906, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=lastIdx, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=CR, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4909, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=last, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=CR, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4973, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4977, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=4983, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=last, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=LF, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=lastIdx, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=ret, selectors=[], type_arguments=None), operandr=MemberReference(member=CR, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5015, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5018, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=repeat, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5022, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=repeat, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=inputLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5025, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=inputLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=repeat, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=PAD_LIMIT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5030, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=inputLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5037, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5044, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5072, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5104, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5155, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5159, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5162, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=PAD_LIMIT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5192, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5195, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=padStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5201, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5204, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=padLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=PAD_LIMIT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5208, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=padLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5210, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=padLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5215, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5267, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5271, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5274, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=PAD_LIMIT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5304, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5307, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=padStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5313, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5316, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=padLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=PAD_LIMIT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5320, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=padLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5322, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=padLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5327, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5346, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5403, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5408, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5443, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5446, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=padStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5451, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pads, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5481, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5504, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5530, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5553, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5581, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5586, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=firstChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isTitleCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5619, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5624, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=firstChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isLowerCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5663, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5669, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5671, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isUpperCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5673, column=20)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isTitleCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5675, column=20)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isLowerCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5705, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=sub, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5710, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=idx, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=sub, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=idx, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=CharSequenceUtils, selectors=[], type_arguments=None)), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5740, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5744, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5745, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isLetter, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5775, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5779, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5780, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isLetter, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=' '), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5810, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5814, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5815, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isLetterOrDigit, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5845, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5849, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5850, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isLetterOrDigit, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=' '), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5884, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5888, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5889, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isAsciiPrintable, postfix_operators=[], prefix_operators=[], qualifier=CharUtils, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5927, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5931, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5932, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isDigit, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5964, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5968, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5969, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isDigit, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=' '), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=5997, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6001, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6002, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isWhitespace, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6029, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6033, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6034, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isLowerCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6061, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6065, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6066, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None)], member=isUpperCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6092, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6113, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6135, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isBlank, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6157, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6177, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6203, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6287, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6290, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=maxWidth, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6293, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=maxWidth, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6296, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6299, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=maxWidth, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=-, prefix_operators=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6303, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6306, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=maxWidth, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6309, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=maxWidth, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=-, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6345, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=middle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6349, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=middle, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6396, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6399, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6403, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=at, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6435, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=cs2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6438, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=cs2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6442, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6443, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs1, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs2, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6447, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=cs2, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=cs1, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6486, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=css, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=css, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6498, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6499, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=css, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6510, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=allStringsNull, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=longestStrLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=MemberReference(member=anyStringNull, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6515, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=shortestStrLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6521, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6523, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6524, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=css, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=arrayPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[MemberReference(member=stringPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=MemberReference(member=comparisonChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6529, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=firstDiff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6534, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=firstDiff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=shortestStrLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=longestStrLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6577, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=strs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=strs, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6581, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=smallestIndexOfDiff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6583, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6587, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=smallestIndexOfDiff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6635, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=t, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6659, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6661, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6665, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6686, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6690, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6694, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6695, column=24)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=s, selectors=[], type_arguments=None), operandr=MemberReference(member=t_j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6744, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=t, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6747, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=threshold, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6799, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6800, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=threshold, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6801, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6802, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=threshold, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6805, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6820, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6829, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6838, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6843, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6848, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6849, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=s, selectors=[], type_arguments=None), operandr=MemberReference(member=t_j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6866, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=p, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=threshold, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6939, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=prefix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6942, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=prefix, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6968, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=string, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchStrings, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6971, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=6972, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=string, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=searchString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7048, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=suffix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7051, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=suffix, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7100, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7125, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=string, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=searchStrings, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7128, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7129, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=string, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=searchString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7148, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=suffix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=suffix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ignoreCase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7151, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=suffixes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=suffixes, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7152, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7153, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ignoreCase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7249, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=prefix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=prefix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ignoreCase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7252, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=prefixes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=prefixes, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7253, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7254, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=p, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ignoreCase, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringUtils
Line: Position(line=7353, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=charsetName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringEscapeUtils
Line: Position(line=177, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringEscapeUtils
Line: Position(line=181, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), MemberReference(member=CSV_SEARCH_CHARS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsNone, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringEscapeUtils
Line: Position(line=311, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringEscapeUtils
Line: Position(line=315, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=MemberReference(member=CSV_QUOTE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=MemberReference(member=CSV_QUOTE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.StringEscapeUtils
Line: Position(line=323, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=quoteless, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=CSV_SEARCH_CHARS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsAny, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=139, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=setStrs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=142, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=setStrs, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=144, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=common, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=162, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=174, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=180, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=182, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=remainder, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='^'), operator===, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='-'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=186, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=remainder, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='-'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=190, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=remainder, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='^'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=224, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=225, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=247, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSet
Line: Position(line=250, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=CharSet, sub_type=None), operator=instanceof, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BitField
Line: Position(line=42, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bit_pattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BitField
Line: Position(line=43, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=bit_pattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=&, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BitField
Line: Position(line=254, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=flag, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BitField
Line: Position(line=267, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=flag, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BitField
Line: Position(line=280, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=flag, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=69, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=183, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=range, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=186, column=9)
Node Type: IfStatement
Condition: MemberReference(member=negated, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=187, column=13)
Node Type: IfStatement
Condition: MemberReference(member=negated, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=192, column=9)
Node Type: IfStatement
Condition: MemberReference(member=negated, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=209, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=212, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=CharRange, sub_type=None), operator=instanceof, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=226, column=39)
Node Type: TernaryExpression
Condition: MemberReference(member=negated, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=236, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iToString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=238, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isNegated, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=242, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=285, column=13)
Node Type: IfStatement
Condition: MemberReference(member=negated, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=286, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=287, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=305, column=13)
Node Type: IfStatement
Condition: MemberReference(member=negated, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=306, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=current, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=308, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=current, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operandr=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=309, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=317, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=current, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=range, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharRange
Line: Position(line=341, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=86, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=88, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=wrapperClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=['!'], qualifier=primitiveClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=151, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=168, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=187, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=194, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="[")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=195, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='['), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=200, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='L'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=';'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=204, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsKey, postfix_operators=[], prefix_operators=[], qualifier=reverseAbbreviationMap, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=211, column=45)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lastDotIdx, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=213, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=innerIdx, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=228, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=244, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=260, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=273, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=289, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=294, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='['), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=298, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='L'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=';'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=303, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=319, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=324, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=superclass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=345, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=362, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=365, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=366, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=add, postfix_operators=[], prefix_operators=[], qualifier=interfacesFound, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=390, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=classNames, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=394, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=417, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=classes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=421, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=422, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=506, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=classArray, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toClassArray, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isSameLength, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=509, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=classArray, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=512, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toClassArray, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=515, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=516, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=classArray, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), MemberReference(member=toClassArray, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), MemberReference(member=autoboxing, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=534, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=617, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=621, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=625, column=9)
Node Type: IfStatement
Condition: MemberReference(member=autoboxing, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=626, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=cls, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=['!'], qualifier=toClass, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=628, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=632, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=toClass, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=['!'], qualifier=cls, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=634, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=639, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=cls, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=642, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=cls, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=643, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=toClass, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=646, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Integer.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=651, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Long.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=655, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Boolean.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=658, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Double.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=661, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Float.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=664, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Character.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=670, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Short.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=676, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=Byte.TYPE, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=703, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=cls, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=720, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=classes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=724, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=classes, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=729, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=770, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=classes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=774, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=classes, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=779, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=816, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsKey, postfix_operators=[], prefix_operators=[], qualifier=abbreviationMap, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=827, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lastDotIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=885, column=36)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=contextCL, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=916, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getDeclaringClass, postfix_operators=[], prefix_operators=[], qualifier=declaredMethod, selectors=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=924, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=925, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=candidateClass, selectors=[], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=934, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getDeclaringClass, postfix_operators=[], prefix_operators=[], qualifier=candidateMethod, selectors=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=952, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=954, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="[]")], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=956, column=13)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="[]")], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=961, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=abbreviation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=982, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=984, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=988, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=989, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1005, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1019, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1049, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1063, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1101, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1105, column=13)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="[")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1109, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=dim, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1112, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="L")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1115, column=25)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=";")], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1119, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=className, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ClassUtils
Line: Position(line=1124, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=175, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=235, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=239, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=241, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Map, sub_type=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None), TypeArgument(pattern_type=?, type=None)], dimensions=None, name=Entry, sub_type=None)), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=244, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=246, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=entry, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=320, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=336, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=352, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=368, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=384, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=400, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=416, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=432, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=448, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=470, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=490, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=510, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=530, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=550, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=570, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=590, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=610, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=630, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=650, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=670, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=690, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=710, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=730, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=750, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=770, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=790, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=810, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=847, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=850, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=853, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=858, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=890, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=893, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=896, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=900, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=929, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=932, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=935, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=939, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=968, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=971, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=974, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=978, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1007, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1010, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1013, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1017, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1046, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1049, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1052, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1056, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1085, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1088, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1091, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1095, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1124, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1127, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1130, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1134, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1163, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1166, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndexInclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1169, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndexExclusive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1173, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1196, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1214, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1232, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1250, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1268, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1286, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1304, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1322, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1340, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array2, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1370, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1386, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1404, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1410, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1427, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1433, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1450, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1456, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1473, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1479, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1496, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1502, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1519, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1525, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1542, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1548, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1565, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1571, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1588, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1594, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1637, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1640, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1643, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=objectToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1644, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1645, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1649, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[MethodInvocation(arguments=[], member=getComponentType, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[MemberReference(member=objectToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1650, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1651, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=objectToFind, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1688, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1691, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1693, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1696, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=objectToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1697, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1698, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1702, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[MethodInvocation(arguments=[], member=getComponentType, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[MemberReference(member=objectToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1703, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1704, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=objectToFind, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1756, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1759, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1762, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1763, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1799, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1802, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1804, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1807, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1808, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1859, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1862, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1865, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1866, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1902, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1905, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1907, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1910, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1911, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1962, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1965, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1968, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=1969, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2005, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2008, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2010, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2013, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2014, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2067, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2070, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2073, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2074, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2112, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2115, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2117, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2120, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2121, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2173, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2176, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2179, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2180, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2216, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2219, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2221, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2224, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2225, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2293, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2296, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2299, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2300, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2325, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2328, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2333, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2334, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2387, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2390, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2392, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2395, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2396, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2421, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2424, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2426, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2431, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2432, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2500, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2503, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2506, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2507, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2543, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2546, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2548, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2551, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2552, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2604, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2607, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2610, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2611, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2648, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2651, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2653, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2656, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2657, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueToFind, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2692, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2694, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2698, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2714, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2716, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2720, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2722, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2736, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2738, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2742, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2760, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2762, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2766, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2782, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2784, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2788, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2790, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2804, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2806, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2810, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2828, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2830, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2834, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2850, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2852, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2856, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2858, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2872, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2874, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2878, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2896, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2898, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2902, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2918, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2920, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2924, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2926, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2940, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2942, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2946, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2964, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2966, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2970, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2986, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2988, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2992, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=2994, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3008, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3010, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3014, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3032, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3034, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3038, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3054, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3056, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3060, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3062, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3076, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3078, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3082, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3100, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3102, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3106, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3122, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3124, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3128, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3130, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3144, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3146, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3150, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3168, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3170, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3174, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3190, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3192, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3196, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3198, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3212, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3214, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3218, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3219, column=25)
Node Type: TernaryExpression
Condition: MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3450, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3452, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3470, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignableFrom, postfix_operators=[], prefix_operators=['!'], qualifier=type1, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3497, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3499, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3526, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3528, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3555, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3557, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3584, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3586, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3613, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3615, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3642, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3644, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3671, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3673, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3700, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3702, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3742, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3744, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=3982, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4023, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4025, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4296, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4297, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4305, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4311, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4379, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4444, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4509, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4574, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4639, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4704, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4769, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4834, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4899, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=INDEX_NOT_FOUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4928, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=4934, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5001, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5005, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5007, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5014, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5017, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5019, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5092, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5096, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5099, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5106, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5109, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5111, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5181, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5185, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5188, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5195, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5198, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5200, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5270, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5274, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5277, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5284, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5287, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5289, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5359, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5363, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5366, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5373, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5376, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5378, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5448, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5452, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5455, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5462, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5465, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5467, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5537, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5541, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5544, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5551, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5554, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5556, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5626, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5630, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5633, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5640, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5643, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5645, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5711, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5715, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5718, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5725, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5728, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5730, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5751, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=indices, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNotEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5756, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=['--'], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5758, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5761, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=prevIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5769, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=diff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5772, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5774, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5782, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5812, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=set, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=srcIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=nextSetBit, postfix_operators=[], prefix_operators=[], qualifier=indices, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5814, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ArrayUtils
Line: Position(line=5821, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=225, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=227, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=230, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=234, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=235, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=238, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=letters, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operandr=MemberReference(member=numbers, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=246, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=254, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=['--'], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=256, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=261, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=letters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isLetter, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=numbers, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isDigit, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=letters, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operandr=MemberReference(member=numbers, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=264, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=56320), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=57343), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=265, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=273, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=55296), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=56191), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=274, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=282, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=56192), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=56319), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=310, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.RandomStringUtils
Line: Position(line=329, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=56, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=70, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=74, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=77, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=78, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=MemberReference(member=searchChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=117, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=121, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=124, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=127, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=128, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=cs, selectors=[], type_arguments=None), operandr=MemberReference(member=searchChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=164, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=169, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=189, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=substring, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=196, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=tmpLen, postfix_operators=['--'], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=200, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=c2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=204, column=17)
Node Type: IfStatement
Condition: MemberReference(member=ignoreCase, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.CharSequenceUtils
Line: Position(line=209, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=c1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=toUpperCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=c2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=toUpperCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=c1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=toLowerCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=c2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=toLowerCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharEncoding
Line: Position(line=95, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=name, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=54, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=109, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=130, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=150, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=173, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=195, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=218, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAsciiNumeric, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=240, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAsciiNumeric, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=263, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=286, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=308, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=128), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=332, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=353, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0x10), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=355, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0x100), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=357, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0x1000), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharUtils
Line: Position(line=380, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=142, column=9)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="0.9")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=144, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.1")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=146, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.2")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=148, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.3")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=150, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.4")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=152, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.5")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=154, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.6")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=156, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.7")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=158, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.8")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=160, column=16)
Node Type: IfStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], value="1.9")
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=163, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nom, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=167, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1.), operator=-, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1.), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=170, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=firstComma, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substring, postfix_operators=[], prefix_operators=[], qualifier=nom, selectors=[], type_arguments=None)], member=parseFloat, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=.9f), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=193, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.JavaVersion
Line: Position(line=201, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=toParse, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=105, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expression, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=130, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expression, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=154, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expression, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=179, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expression, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=221, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=247, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=250, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=296, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=collection, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=299, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=collection, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=345, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=map, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=348, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=map, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=394, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=397, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=447, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=450, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isBlank, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=507, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=508, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=570, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=571, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=next, postfix_operators=[], prefix_operators=[], qualifier=it, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=630, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=689, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=size, postfix_operators=[], prefix_operators=[], qualifier=collection, selectors=[], type_arguments=None), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=746, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[], type_arguments=None), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=803, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expression, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=825, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expression, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=850, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=pattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=input, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matches, postfix_operators=[], prefix_operators=[], qualifier=Pattern, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=874, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=pattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=input, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matches, postfix_operators=[], prefix_operators=[], qualifier=Pattern, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=899, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=924, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=949, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=974, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareTo, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=1000, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=[], qualifier=type, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=1002, column=21)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=1025, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=[], qualifier=type, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=1051, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignableFrom, postfix_operators=[], prefix_operators=[], qualifier=superType, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=1052, column=96)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Validate
Line: Position(line=1076, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignableFrom, postfix_operators=[], prefix_operators=[], qualifier=superType, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=147, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=element1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=element2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=151, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=154, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=element1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=element2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compare, postfix_operators=[], prefix_operators=[], qualifier=comparator, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=219, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=232, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=245, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=258, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=271, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=288, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=292, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAfter, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=294, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isBefore, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=314, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=otherRange, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=331, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=otherRange, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=350, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=otherRange, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=368, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=otherRange, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=382, column=9)
Node Type: IfStatement
Condition: This(postfix_operators=[], prefix_operators=['!'], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=other, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isOverlappedBy, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=386, column=9)
Node Type: IfStatement
Condition: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=other, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=389, column=23)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getComparator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[MethodInvocation(arguments=[MemberReference(member=minimum, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=minimum, postfix_operators=[], prefix_operators=[], qualifier=other, selectors=[])], member=compare, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=390, column=23)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getComparator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[MethodInvocation(arguments=[MemberReference(member=maximum, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=maximum, postfix_operators=[], prefix_operators=[], qualifier=other, selectors=[])], member=compare, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=408, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=410, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=obj, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=!=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=429, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hashCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.Range
Line: Position(line=449, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=96, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=122, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=123, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=124, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=val, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=154, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=object2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=157, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=object1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=object2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=201, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=226, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=objects, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=227, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=253, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=278, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=302, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=326, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=350, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=378, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=401, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=421, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=422, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=423, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=compare, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=446, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=447, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=448, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=compare, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=484, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=c2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=486, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=487, column=20)
Node Type: TernaryExpression
Condition: MemberReference(member=nullGreater, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=488, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=489, column=20)
Node Type: TernaryExpression
Condition: MemberReference(member=nullGreater, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=549, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=items, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNotEmpty, postfix_operators=[], prefix_operators=[], qualifier=ArrayUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=551, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=553, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=561, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=563, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cmp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=565, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cmp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=587, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Cloneable, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=589, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=obj, selectors=[MethodInvocation(arguments=[], member=isArray, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=591, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=['!'], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=596, column=21)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=['--'], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=642, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=clone, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=763, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Byte, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Byte, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.ObjectUtils
Line: Position(line=825, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Short, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Short, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=74, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=75, column=17)
Node Type: IfStatement
Condition: ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[MethodInvocation(arguments=[MemberReference(member=iface, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignableFrom, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=Annotation, sub_type=None))
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=83, column=38)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=annotationType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=92, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Annotation, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=123, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=a1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=126, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=a1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=a2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=133, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=['!'], qualifier=type, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=137, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=138, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[MemberReference(member=length, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getReturnType, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None)], member=isValidAnnotationMemberType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=142, column=21)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getReturnType, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), MemberReference(member=v1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=v2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=memberEquals, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=170, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=173, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=197, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=198, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[MemberReference(member=length, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=224, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=227, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isArray, postfix_operators=[], prefix_operators=[], qualifier=type, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=244, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[MethodInvocation(arguments=[], member=isArray, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=247, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Annotation, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=264, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=o1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=o2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=267, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=o1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=o2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=270, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isArray, postfix_operators=[], prefix_operators=[], qualifier=type, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=273, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isAnnotation, postfix_operators=[], prefix_operators=[], qualifier=type, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=288, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isAnnotation, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=291, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Byte, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=294, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Short, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=297, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=300, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=303, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=306, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=309, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=312, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Boolean, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=326, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=a1, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=a2, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=329, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=330, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=a1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), MemberReference(member=a2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=equals, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=345, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Byte, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=348, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Short, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=351, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=354, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=357, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=360, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=363, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.AnnotationUtils
Line: Position(line=366, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=TYPE, postfix_operators=[], prefix_operators=[], qualifier=Boolean, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=componentType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=64, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=67, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=booleanValue, postfix_operators=[], prefix_operators=[], qualifier=bool, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=176, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=217, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=239, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=242, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=intValue, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=262, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=trueValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=265, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=falseValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=290, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=291, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=trueValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=294, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=falseValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=297, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=trueValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=299, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=falseValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=325, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=trueValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=328, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=falseValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=331, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=nullValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=357, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=358, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=trueValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=361, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=falseValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=364, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nullValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=367, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=trueValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=369, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=falseValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=371, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=nullValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=393, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=409, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=427, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=430, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=booleanValue, postfix_operators=[], prefix_operators=[], qualifier=bool, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=447, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=466, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=469, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=booleanValue, postfix_operators=[], prefix_operators=[], qualifier=bool, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=486, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=505, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=508, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=booleanValue, postfix_operators=[], prefix_operators=[], qualifier=bool, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=552, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="true"), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=555, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=558, column=9)
Node Type: SwitchStatement
Condition: MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=561, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='y'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='Y'), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='t'), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='T'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=565, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='n'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='N'), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='F'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=574, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='o'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='O'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='n'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='N'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=578, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='n'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='N'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='o'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='O'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=588, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='y'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='Y'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='e'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='E'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='s'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='S'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=593, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='o'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='O'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='F'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='F'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=605, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='t'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='T'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='r'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='R'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='u'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='U'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch3, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='e'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch3, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='E'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=619, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch0, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='F'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='a'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='A'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='l'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='L'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch3, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='s'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch3, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='S'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch4, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='e'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ch4, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='E'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=653, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=654, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=trueString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=657, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=falseString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=660, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nullString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=663, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=trueString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=665, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=falseString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=667, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=nullString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=724, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=trueString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=726, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=falseString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=728, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=729, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=trueString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=731, column=20)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=falseString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=808, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=811, column=16)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=booleanValue, postfix_operators=[], prefix_operators=[], qualifier=bool, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=878, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=bool, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=902, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=905, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=908, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=909, column=13)
Node Type: IfStatement
Condition: MemberReference(member=element, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=936, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=939, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=944, column=20)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=primitive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=and, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=970, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=973, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=976, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=977, column=13)
Node Type: IfStatement
Condition: MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1005, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1008, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1013, column=20)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=primitive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=or, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1038, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1041, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1047, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1050, column=13)
Node Type: IfStatement
Condition: MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1051, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=trueCount, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1079, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1082, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.BooleanUtils
Line: Position(line=1087, column=20)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=primitive, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=xor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=60, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=91, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=enumName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=114, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=enumName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=146, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=173, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=178, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=229, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=271, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.EnumUtils
Line: Position(line=273, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=block, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=values, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=values, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=block, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=ordinal, postfix_operators=[], prefix_operators=[], qualifier=constant, selectors=[], type_arguments=None), operandr=MemberReference(member=SIZE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[]), operator=%, prefix_operators=[]), operator=<<, prefix_operators=None), operator=&, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=65, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=set, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=deepEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=74, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=77, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=lastChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=107, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=set, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=deepEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=111, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=112, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=140, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=set, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=deepEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=145, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=146, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=175, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=178, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=set, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=deepEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=205, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=set, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=deepEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=225, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=226, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=chrs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[], type_arguments=None), operandr=MemberReference(member=expect, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=241, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strings, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=242, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.CharSetUtils
Line: Position(line=243, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNotEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableByte
Line: Position(line=246, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=MutableByte, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableByte
Line: Position(line=272, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableByte
Line: Position(line=272, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableBoolean
Line: Position(line=155, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=MutableBoolean, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableBoolean
Line: Position(line=168, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableBoolean
Line: Position(line=182, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableBoolean
Line: Position(line=182, column=42)
Node Type: TernaryExpression
Condition: MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableLong
Line: Position(line=236, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=MutableLong, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableLong
Line: Position(line=262, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableLong
Line: Position(line=262, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableInt
Line: Position(line=236, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=MutableInt, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableInt
Line: Position(line=262, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableInt
Line: Position(line=262, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableObject
Line: Position(line=94, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableObject
Line: Position(line=97, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operandr=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableObject
Line: Position(line=100, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getClass, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=obj, selectors=[], type_arguments=None), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableObject
Line: Position(line=115, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableObject
Line: Position(line=126, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableShort
Line: Position(line=246, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=MutableShort, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableShort
Line: Position(line=272, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.mutable.MutableShort
Line: Position(line=272, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=anotherVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Pair
Line: Position(line=130, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Pair
Line: Position(line=133, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Map, sub_type=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None), TypeArgument(pattern_type=?, type=None)], dimensions=None, name=Entry, sub_type=None)), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Pair
Line: Position(line=150, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getKey, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Pair
Line: Position(line=151, column=17)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Triple
Line: Position(line=109, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Triple
Line: Position(line=112, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None), TypeArgument(pattern_type=?, type=None), TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Triple, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Triple
Line: Position(line=128, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getLeft, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Triple
Line: Position(line=129, column=13)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getMiddle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.tuple.Triple
Line: Position(line=130, column=13)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getRight, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=79, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=toType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=toType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=83, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=87, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GenericArrayType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=91, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=96, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=113, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=120, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=125, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=toClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=129, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=134, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=140, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=143, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=144, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=154, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GenericArrayType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=163, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=181, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=187, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toParameterizedType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=192, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=toParameterizedType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=203, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fromTypeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=210, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=fromTypeVarAssigns, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=219, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=226, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=fromTypeArg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=fromTypeArg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=['!'], qualifier=toTypeArg, selectors=[], type_arguments=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=toTypeArg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=fromTypeArg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toTypeArg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=&&, prefix_operators=['!']), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=239, column=9)
Node Type: DoStatement
Condition: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=241, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=var, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=['!'], qualifier=result, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=262, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=268, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toGenericArrayType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=273, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=toGenericArrayType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=279, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=287, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GenericArrayType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=293, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=295, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=296, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toGenericArrayType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=304, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=307, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=308, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toGenericArrayType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=316, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=338, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=344, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toWildcardType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=349, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=toWildcardType, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=356, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=361, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=369, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=370, column=21)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toBound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=376, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=384, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=385, column=21)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=toBound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=394, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=397, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=toBound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substituteTypeVariables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=403, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=406, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=toBound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substituteTypeVariables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=427, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=433, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toTypeVariable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=438, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=toTypeVariable, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=442, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=448, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=449, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toTypeVariable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=455, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GenericArrayType, sub_type=None), operator=instanceof, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=472, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=475, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=replacementType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=547, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=551, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=555, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GenericArrayType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=556, column=90)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=isArray, postfix_operators=[], prefix_operators=[], qualifier=toClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=562, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=563, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=565, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=574, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=575, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=577, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=603, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=610, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ownerType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=617, column=30)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=subtypeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=627, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=629, column=47)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=typeArg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsKey, postfix_operators=[], prefix_operators=[], qualifier=typeVarAssigns, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=633, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=toClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=653, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=658, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=cls, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=660, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=toClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=671, column=63)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=subtypeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=675, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=toClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=715, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=superClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=719, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=superClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=cls, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=727, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=midType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=755, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ownerType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=774, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=779, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=typeArg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=typeVarList, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=typeVar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsKey, postfix_operators=[], prefix_operators=[], qualifier=typeVarAssigns, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=799, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isInterface, postfix_operators=[], prefix_operators=[], qualifier=superClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=806, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=809, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=midType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=811, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=midType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=820, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=midClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=superClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=genericInterface, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=MemberReference(member=midClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=ReferenceType(arguments=None, dimensions=[], name=Type, sub_type=None))], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=827, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=genericInterface, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=846, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=850, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=877, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=bounds, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=883, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=886, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=887, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=type1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=type2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=type2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=type1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=893, column=13)
Node Type: IfStatement
Condition: MemberReference(member=subtypeFound, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=913, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=bounds, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=929, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=bounds, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=944, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=bounds, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=963, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=967, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=968, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=bound, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substituteTypeVariables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=993, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rawType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1013, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1018, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=ParameterizedType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1023, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=TypeVariable, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1024, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=assigningType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1033, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=genericDeclaration, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1044, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=typeVarAssigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1051, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=typeArgument, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1059, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GenericArrayType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1069, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=WildcardType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1091, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Class, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1093, column=20)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=isArray, postfix_operators=[], prefix_operators=[], qualifier=clazz, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.TypeUtils
Line: Position(line=1095, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GenericArrayType, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=86, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=116, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=119, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=124, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=153, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=183, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=186, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=191, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=222, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=225, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=229, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=263, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=296, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=299, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=304, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=332, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=370, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAccessible, postfix_operators=[], prefix_operators=['!'], qualifier=MemberUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=375, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=cls, selectors=[], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=386, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=406, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=parentClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=407, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=parentClass, selectors=[], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=439, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=443, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=445, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=interfaces, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getModifiers, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])], member=isPublic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=458, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=464, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=503, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=505, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=method, selectors=[MethodInvocation(arguments=[MemberReference(member=methodName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=method, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=ClassUtils, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=508, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=accessibleMethod, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=bestMatch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=accessibleMethod, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=bestMatch, selectors=[], type_arguments=None), MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=MemberUtils, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MethodUtils
Line: Position(line=516, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=bestMatch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=55, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=o, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=isAccessible, postfix_operators=[], prefix_operators=[], qualifier=o, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=59, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getDeclaringClass, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=isPackageAccess, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=102, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=leftCost, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rightCost, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=102, column=44)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=rightCost, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=leftCost, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=114, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=132, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=[], qualifier=destClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=136, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=srcClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=srcClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=['!'], qualifier=destClass, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=137, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isInterface, postfix_operators=[], prefix_operators=[], qualifier=destClass, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=srcClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=destClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=ClassUtils, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=153, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=srcClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=169, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isPrimitive, postfix_operators=[], prefix_operators=['!'], qualifier=cls, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=174, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=175, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=ORDERED_PRIMITIVE_TYPES, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.MemberUtils
Line: Position(line=177, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=ORDERED_PRIMITIVE_TYPES, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=81, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=110, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=113, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=117, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ctor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=145, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=174, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=args, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=177, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=181, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ctor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=222, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ctor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAccessible, postfix_operators=[], prefix_operators=[], qualifier=MemberUtils, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getDeclaringClass, postfix_operators=[], prefix_operators=[], qualifier=ctor, selectors=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=261, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=263, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=ctor, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=isAssignable, postfix_operators=[], prefix_operators=[], qualifier=ClassUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=266, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ctor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.ConstructorUtils
Line: Position(line=268, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=ctor, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=result, selectors=[], type_arguments=None), MemberReference(member=parameterTypes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareParameterTypes, postfix_operators=[], prefix_operators=[], qualifier=MemberUtils, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=80, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=83, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fieldName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=100, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=105, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=isPublic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=106, column=21)
Node Type: IfStatement
Condition: MemberReference(member=forceAccess, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=121, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=124, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=167, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=170, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fieldName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=176, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isAccessible, postfix_operators=[], prefix_operators=['!'], qualifier=MemberUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=177, column=17)
Node Type: IfStatement
Condition: MemberReference(member=forceAccess, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=212, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cls, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=217, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=currentClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=219, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=256, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=259, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=isStatic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=300, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=342, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=382, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=385, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=forceAccess, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=isAccessible, postfix_operators=[], prefix_operators=['!'], qualifier=field, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=427, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=target, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=432, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=473, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=target, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=478, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=517, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=520, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=isStatic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=564, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=609, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=653, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=656, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=forceAccess, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=isAccessible, postfix_operators=[], prefix_operators=['!'], qualifier=field, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=701, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=target, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=706, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=750, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=target, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.reflect.FieldUtils
Line: Position(line=755, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=142, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=145, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=146, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=173, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=176, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=179, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=183, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=whole, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=188, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=numeratorValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=numeratorValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=210, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=213, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=217, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=&, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=220, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=221, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=250, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=252, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=>, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=275, column=9)
Node Type: DoStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=delta1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=delta2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=denom2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10000), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=denom2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=25), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=295, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=25), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=320, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=325, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=331, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=335, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=346, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=470, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=471, column=20)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[MemberReference(member=ZERO, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=474, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=gcd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=490, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=493, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=496, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=512, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=528, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=547, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=power, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=549, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=power, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=551, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=power, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=552, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=power, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=558, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=power, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=%, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=578, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=u, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=579, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=u, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=585, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=u, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=abs, postfix_operators=[], prefix_operators=[], qualifier=Math, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=abs, postfix_operators=[], prefix_operators=[], qualifier=Math, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=592, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=u, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=593, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=596, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=u, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=&, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=v, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=&, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=k, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=31), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=599, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=k, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=31), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=604, column=17)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=u, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=&, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=607, column=9)
Node Type: DoStatement
Condition: BinaryOperation(operandl=MemberReference(member=t, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=610, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=t, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=&, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=614, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=t, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=641, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=660, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=677, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=695, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MIN_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=741, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fraction, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=745, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=746, column=20)
Node Type: TernaryExpression
Condition: MemberReference(member=isAdd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=748, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=fraction, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=754, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=d1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=759, column=18)
Node Type: TernaryExpression
Condition: MemberReference(member=isAdd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=769, column=30)
Node Type: TernaryExpression
Condition: MemberReference(member=isAdd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=773, column=24)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=tmodd1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=777, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=bitLength, postfix_operators=[], prefix_operators=[], qualifier=w, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=31), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=797, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fraction, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=800, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=fraction, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=823, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fraction, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=826, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=fraction, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=845, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=848, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Fraction, sub_type=None), operator=instanceof, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=863, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hashCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=884, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operandr=MemberReference(member=other, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=887, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=other, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=other, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=894, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=first, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=second, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=896, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=first, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=second, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=912, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=931, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toProperString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=932, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=934, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=936, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operandr=MemberReference(member=denominator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=*, prefix_operators=None), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=938, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=TernaryExpression(condition=BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), if_false=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), if_true=MemberReference(member=numerator, postfix_operators=[], prefix_operators=['-'], qualifier=, selectors=[])), operandr=MemberReference(member=denominator, postfix_operators=[], prefix_operators=['-'], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=938, column=24)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=numerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.Fraction
Line: Position(line=944, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=properNumerator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=121, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=170, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=222, column=7)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=274, column=7)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=324, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=373, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=451, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=454, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isBlank, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=460, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=461, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=pfx, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=466, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pfxLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=468, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hexDigits, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=471, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hexDigits, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=486, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=decPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=488, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=489, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=decPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=499, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=500, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=509, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=lastChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isDigit, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=lastChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='.'), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=510, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=518, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=lastChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=521, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=dec, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=exp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=numeric, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='-'), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=numeric, selectors=[], type_arguments=None)], member=isDigits, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=numeric, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isDigits, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=537, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isInfinite, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=floatValue, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0.0F), operator===, prefix_operators=None), operandr=MemberReference(member=allZeros, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=[]), operator=||, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=551, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isInfinite, postfix_operators=[], prefix_operators=[], qualifier=d, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=floatValue, postfix_operators=[], prefix_operators=[], qualifier=d, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0.0D), operator===, prefix_operators=None), operandr=MemberReference(member=allZeros, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=[]), operator=||, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=570, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=expPos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=575, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=dec, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=exp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=593, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numDecimals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=595, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isInfinite, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=floatValue, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0.0F), operator===, prefix_operators=None), operandr=MemberReference(member=allZeros, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=[]), operator=||, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=603, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=numDecimals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=605, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isInfinite, postfix_operators=[], prefix_operators=[], qualifier=d, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=doubleValue, postfix_operators=[], prefix_operators=[], qualifier=d, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0.0D), operator===, prefix_operators=None), operandr=MemberReference(member=allZeros, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=[]), operator=||, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=625, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=628, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=629, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='0'), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=647, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=663, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=680, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=698, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=715, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=721, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="-")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=725, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="0x"), MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="0x"), MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=728, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="#"), MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=731, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="0"), MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=737, column=16)
Node Type: TernaryExpression
Condition: MemberReference(member=negate, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=750, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=754, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isBlank, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=757, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=trim, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="--")], member=startsWith, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=783, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=784, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=806, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=807, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=829, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=830, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=852, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=853, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=876, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=877, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=880, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=903, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=904, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=907, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=min, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=931, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=932, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=954, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=955, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=977, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=978, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1000, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1001, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1024, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1025, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1028, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1051, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1052, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1055, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1070, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1072, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getLength, postfix_operators=[], prefix_operators=[], qualifier=Array, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1088, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1091, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1106, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1109, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1124, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1127, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1142, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1145, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1194, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1197, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1212, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1215, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1230, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1233, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1248, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1251, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1301, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1304, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1305, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None)], member=isDigit, postfix_operators=[], prefix_operators=['!'], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1326, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1336, column=27)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='-'), operator===, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1337, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='0'), operator===, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='x'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1339, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1343, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1344, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='0'), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='9'), operator=>, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='a'), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operator=>, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='A'), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='F'), operator=>, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1357, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operator=<, prefix_operators=None), operandr=MemberReference(member=allowSigns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=&&, prefix_operators=None), operandr=MemberReference(member=foundDigit, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1358, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='0'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='9'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1362, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='.'), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1363, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hasDecPoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=hasExp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1368, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='e'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='E'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1370, column=17)
Node Type: IfStatement
Condition: MemberReference(member=hasExp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1374, column=17)
Node Type: IfStatement
Condition: MemberReference(member=foundDigit, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1379, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='+'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='-'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1380, column=17)
Node Type: IfStatement
Condition: MemberReference(member=allowSigns, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1390, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1391, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='0'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='9'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1395, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='e'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='E'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1399, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='.'), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1400, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hasDecPoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=hasExp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1407, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=allowSigns, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='d'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='D'), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operator===, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='F'), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.NumberUtils
Line: Position(line=1414, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='l'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='L'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=39, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=41, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=47, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=64, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=66, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=72, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=103, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=106, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=137, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=140, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=157, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=159, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=165, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=182, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=184, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=190, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=221, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=224, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Double, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=255, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.math.IEEE754rUtils
Line: Position(line=258, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isNaN, postfix_operators=[], prefix_operators=[], qualifier=Float, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=116, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=lookingAt, postfix_operators=[], prefix_operators=['!'], qualifier=patternMatcher, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=123, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=125, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=lookingAt, postfix_operators=[], prefix_operators=['!'], qualifier=patternMatcher, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=131, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=regex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=addRegex, postfix_operators=[], prefix_operators=[], qualifier=currentStrategy, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=137, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=regionStart, postfix_operators=[], prefix_operators=[], qualifier=patternMatcher, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=regionEnd, postfix_operators=[], prefix_operators=[], qualifier=patternMatcher, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=140, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=regex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=addRegex, postfix_operators=[], prefix_operators=[], qualifier=currentStrategy, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=189, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=FastDateParser, sub_type=None), operator=instanceof, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=247, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=249, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=JAPANESE_IMPERIAL, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=locale, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=274, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=lookingAt, postfix_operators=[], prefix_operators=['!'], qualifier=matcher, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=281, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=301, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=303, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=305, column=17)
Node Type: IfStatement
Condition: MemberReference(member=unquote, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=306, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=['++'], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=313, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=['++'], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=325, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='E'), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=356, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=trial, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=thisYear, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=20), operator=+, prefix_operators=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=427, column=9)
Node Type: SwitchStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=formatField, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=429, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=formatField, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=448, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=formatField, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=468, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=formatField, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=485, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=caches, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=501, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strategy, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=502, column=23)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=ZONE_OFFSET, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=506, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=inCache, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=533, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='\''), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=573, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=586, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iVal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=589, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=627, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isNextNumber, postfix_operators=[], prefix_operators=[], qualifier=parser, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=661, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=100), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=681, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=682, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="GMT")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=id, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=688, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=useDaylightTime, postfix_operators=[], prefix_operators=[], qualifier=tz, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=695, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=717, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='+'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='-'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=720, column=18)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="GMT")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateParser
Line: Position(line=725, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDateFormat
Line: Position(line=548, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=FastDateFormat, sub_type=None), operator=instanceof, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=125, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_STOPPED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=128, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_UNSTARTED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=149, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_RUNNING, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_SUSPENDED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=152, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_RUNNING, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=186, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_RUNNING, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=207, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=splitState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_SPLIT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=227, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_RUNNING, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=248, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_SUSPENDED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=284, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_STOPPED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_SUSPENDED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=286, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_UNSTARTED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=288, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_RUNNING, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=328, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=splitState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_SPLIT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.StopWatch
Line: Position(line=343, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=runningState, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=STATE_UNSTARTED, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=70, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=73, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=timeZone, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=76, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=locale, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=81, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=format, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=84, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=previousValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=121, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=locale, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=195, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=198, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=dateStyle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=201, column=22)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=timeStyle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=209, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=previous, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=254, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=hashCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=256, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FormatCache
Line: Position(line=257, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=key, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=155, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=date1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=date2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=179, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cal1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=cal2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=200, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=date1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=date2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=218, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cal1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=cal2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=238, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cal1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=cal2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=354, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=parsePatterns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=359, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=locale, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=367, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=372, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="ZZ")], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=parsePattern, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=381, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="ZZ")], member=endsWith, postfix_operators=[], prefix_operators=[], qualifier=parsePattern, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=386, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str2, selectors=[], type_arguments=None), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=517, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=646, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=700, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=737, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=774, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=777, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Date, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=779, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Calendar, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=803, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=828, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=853, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=856, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Date, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=858, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Calendar, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=883, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=909, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=935, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=938, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Date, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=940, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Calendar, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=957, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=YEAR, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=val, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=280000000), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=961, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MILLISECOND, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=977, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=MODIFY_TRUNCATE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=modType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=millisecs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=500), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=980, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SECOND, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=986, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=done, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=MODIFY_TRUNCATE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=modType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=seconds, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=30), operator=<, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=989, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MINUTE, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=995, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=done, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=MODIFY_TRUNCATE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=modType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=minutes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=30), operator=<, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1000, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getTime, postfix_operators=[], prefix_operators=[], qualifier=date, selectors=[], type_arguments=None), operandr=MemberReference(member=time, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1007, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1008, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1009, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=element, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1011, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=modType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MODIFY_CEILING, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=modType, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=MODIFY_ROUND, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=MemberReference(member=roundUp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=&&, prefix_operators=[]), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1012, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SEMI_MONTH, postfix_operators=[], prefix_operators=[], qualifier=DateUtils, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1016, column=29)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=DATE, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=val, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1023, column=32)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=AM_PM, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1027, column=29)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=HOUR_OF_DAY, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=val, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1047, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1049, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=aField, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), operandr=MemberReference(member=DATE, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1056, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=15), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1065, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=aField, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), operandr=MemberReference(member=HOUR_OF_DAY, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1069, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=12), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1077, column=13)
Node Type: IfStatement
Condition: MemberReference(member=offsetSet, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1086, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1120, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=focus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1153, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=focus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1160, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=rangeStyle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1170, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rangeStyle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=RANGE_MONTH_MONDAY, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1182, column=17)
Node Type: SwitchStatement
Condition: MemberReference(member=rangeStyle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1203, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startCutoff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SUNDAY, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1206, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startCutoff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SATURDAY, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1209, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endCutoff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SUNDAY, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1212, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endCutoff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SATURDAY, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1215, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=DAY_OF_WEEK, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=start, selectors=[], type_arguments=None), operandr=MemberReference(member=startCutoff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1218, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=DAY_OF_WEEK, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=end, selectors=[], type_arguments=None), operandr=MemberReference(member=endCutoff, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1241, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=focus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1244, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=focus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Date, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1246, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=focus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Calendar, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1663, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=date, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1683, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=calendar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1690, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=fragment, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1699, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=fragment, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1809, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=unit, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DateUtils
Line: Position(line=1869, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=endFinal, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=spot, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=152, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=181, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=187, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=194, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=199, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=202, column=60)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=206, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=208, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=210, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=235, column=60)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=259, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=266, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokenLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=274, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=sub, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=304, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='A'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='Z'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='a'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='z'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=309, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=311, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=peek, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=324, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=327, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='\''), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=328, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=pattern, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='\''), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=335, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=inLiteral, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='A'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='Z'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='a'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='z'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=357, column=9)
Node Type: SwitchStatement
Condition: MemberReference(member=padding, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=380, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Date, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=382, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Calendar, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=384, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Long, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=388, column=17)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=464, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=519, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=FastDatePrinter, sub_type=None), operator=instanceof, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=689, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=691, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=max, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=743, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=745, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=100), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=789, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=812, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=841, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=100), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=842, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=849, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1000), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=855, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=899, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=100), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1016, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1061, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1092, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1096, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=prior, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1144, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=useDaylightTime, postfix_operators=[], prefix_operators=[], qualifier=zone, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=DST_OFFSET, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=calendar, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1187, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1198, column=13)
Node Type: IfStatement
Condition: MemberReference(member=mColon, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1228, column=13)
Node Type: IfStatement
Condition: MemberReference(member=daylight, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1248, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operandr=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.FastDatePrinter
Line: Position(line=1251, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=TimeZoneDisplayKey, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=132, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=d, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=[], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=136, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=H, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=[], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=140, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=[], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=144, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=[], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=148, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=S, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=[], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=175, column=9)
Node Type: IfStatement
Condition: MemberReference(member=suppressLeadingZeroElements, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=179, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=tmp, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=duration, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=182, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=tmp, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=duration, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=186, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=tmp, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=duration, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=191, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=duration, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=196, column=9)
Node Type: IfStatement
Condition: MemberReference(member=suppressTrailingZeroElements, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=198, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=tmp, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=duration, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=201, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=tmp, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=duration, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=204, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=tmp, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=duration, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=297, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=milliseconds, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=301, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=seconds, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=305, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=minutes, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=309, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=hours, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=314, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=M, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=[], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=315, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=days, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=321, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=months, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=326, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=y, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=['!'], qualifier=Token, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=years, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=327, column=17)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=years, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=335, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=y, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=['!'], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=337, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=months, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=342, column=17)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=YEAR, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=start, selectors=[], type_arguments=None), operandr=MemberReference(member=target, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=346, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=GregorianCalendar, sub_type=None), operator=instanceof, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=MONTH, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=start, selectors=[], type_arguments=None), operandr=MemberReference(member=FEBRUARY, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=DAY_OF_MONTH, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=start, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=29), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=360, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=MONTH, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=start, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=MONTH, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[])], member=get, postfix_operators=[], prefix_operators=[], qualifier=end, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=367, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=days, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=379, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=d, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=['!'], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=383, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=H, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=['!'], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=387, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=['!'], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=391, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsTokenWithValue, postfix_operators=[], prefix_operators=['!'], qualifier=Token, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=419, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=423, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=StringBuilder, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=426, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=y, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=427, column=35)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=430, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=M, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=431, column=35)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=434, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=d, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=435, column=35)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=438, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=H, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=439, column=35)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=442, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=443, column=35)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=446, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=s, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=447, column=35)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=450, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=S, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=451, column=21)
Node Type: IfStatement
Condition: MemberReference(member=lastOutputSeconds, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=453, column=44)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=458, column=39)
Node Type: TernaryExpression
Condition: MemberReference(member=padWithZeros, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=493, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=495, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=inLiteral, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='\''), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=500, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=503, column=17)
Node Type: IfStatement
Condition: MemberReference(member=inLiteral, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=534, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=541, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=542, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=previous, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getValue, postfix_operators=[], prefix_operators=[], qualifier=previous, selectors=[], type_arguments=None), operandr=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=570, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=571, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getValue, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=636, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Token, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=638, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=value, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[], member=getClass, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=tok2.value, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=641, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=count, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=tok2, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=644, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=value, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=ReferenceType(arguments=None, dimensions=[], name=StringBuilder, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.time.DurationFormatUtils
Line: Position(line=646, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=value, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=ReferenceType(arguments=None, dimensions=[], name=Number, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.AtomicInitializer
Line: Position(line=84, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.AtomicInitializer
Line: Position(line=86, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compareAndSet, postfix_operators=[], prefix_operators=['!'], qualifier=reference, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConstantInitializer
Line: Position(line=92, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getObject, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConstantInitializer
Line: Position(line=106, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operandr=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConstantInitializer
Line: Position(line=109, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=ConstantInitializer, sub_type=None), operator=instanceof, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=202, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=timePeriod, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=209, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=service, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=255, column=9)
Node Type: IfStatement
Condition: MemberReference(member=shutdown, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=257, column=13)
Node Type: IfStatement
Condition: MemberReference(member=ownExecutor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=262, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=task, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=293, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isShutdown, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=297, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=task, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=302, column=9)
Node Type: DoStatement
Condition: MemberReference(member=canPass, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=304, column=13)
Node Type: IfStatement
Condition: MemberReference(member=canPass, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.TimedSemaphore
Line: Position(line=361, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=periodCount, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=61, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getCause, postfix_operators=[], prefix_operators=[], qualifier=ex, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=83, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getCause, postfix_operators=[], prefix_operators=[], qualifier=ex, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=108, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=129, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=crex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=144, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=RuntimeException, sub_type=None), operator=instanceof, prefix_operators=['!']), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=ex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Error, sub_type=None), operator=instanceof, prefix_operators=['!']), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=159, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getCause, postfix_operators=[], prefix_operators=[], qualifier=ex, selectors=[], type_arguments=None), operandr=ReferenceType(arguments=None, dimensions=[], name=RuntimeException, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=163, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getCause, postfix_operators=[], prefix_operators=[], qualifier=ex, selectors=[], type_arguments=None), operandr=ReferenceType(arguments=None, dimensions=[], name=Error, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=184, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=initializer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=242, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=map, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=247, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=272, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=map, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=init, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.ConcurrentUtils
Line: Position(line=277, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BackgroundInitializer
Line: Position(line=155, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isStarted, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BackgroundInitializer
Line: Position(line=175, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isStarted, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BackgroundInitializer
Line: Position(line=181, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=executor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BackgroundInitializer
Line: Position(line=232, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=future, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BackgroundInitializer
Line: Position(line=329, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=execFinally, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=116, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=wrappedFactory, postfix_operators=[], prefix_operators=[], qualifier=builder, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=221, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getNamingPattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=226, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getUncaughtExceptionHandler, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=230, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getPriority, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=234, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getDaemonFlag, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=283, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=factory, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=301, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.BasicThreadFactory
Line: Position(line=346, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=handler, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.LazyInitializer
Line: Position(line=97, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.LazyInitializer
Line: Position(line=100, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=135, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=name, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=139, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=init, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=145, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isStarted, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=167, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=195, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=196, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getExternalExecutor, postfix_operators=[], prefix_operators=[], qualifier=bi, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=206, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer
Line: Position(line=344, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=init, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.CallableBackgroundInitializer
Line: Position(line=122, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=call, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.AtomicSafeInitializer
Line: Position(line=76, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[], member=get, postfix_operators=[], prefix_operators=[], qualifier=reference, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.concurrent.AtomicSafeInitializer
Line: Position(line=77, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=compareAndSet, postfix_operators=[], prefix_operators=[], qualifier=factory, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=179, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=valueProperties, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=184, column=9)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasMoreElements, postfix_operators=[], prefix_operators=[], qualifier=propNames, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=301, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=305, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=source, selectors=[], type_arguments=None)], member=substitute, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=324, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=328, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substitute, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=344, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=366, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=384, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=406, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=424, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=445, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=463, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=485, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=503, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=521, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=541, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=545, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substitute, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=563, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=584, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=588, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substitute, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=604, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=623, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=source, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=671, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=bufEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=674, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startMatchLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=678, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None))]), operandr=MemberReference(member=escape, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=691, column=21)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=bufEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=692, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isEnableSubstitutionInVariables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=Assignment(expressionl=MemberReference(member=endMatchLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=bufEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isMatch, postfix_operators=[], prefix_operators=[], qualifier=prefixMatcher, selectors=[], type_arguments=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=703, column=25)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endMatchLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=707, column=29)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nestedVarCount, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=711, column=33)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEnableSubstitutionInVariables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=720, column=33)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=priorVariables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=733, column=33)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=varValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=762, column=9)
Node Type: IfStatement
Condition: MemberReference(member=top, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=763, column=20)
Node Type: TernaryExpression
Condition: MemberReference(member=altered, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=775, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=varName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=priorVariables, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=805, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=resolver, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=860, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=prefixMatcher, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=892, column=8)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=prefix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=925, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=suffixMatcher, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrSubstitutor
Line: Position(line=957, column=8)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=suffix, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=113, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=initialCapacity, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=127, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=173, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=nullText, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=nullText, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=200, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=203, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=205, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=210, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=234, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=capacity, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=248, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=309, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=326, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=343, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=357, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=378, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=394, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=destination, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=destination, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=412, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=415, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=418, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=435, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newLine, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=448, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nullText, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=462, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=478, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=496, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=seq, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=510, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=514, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=534, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=537, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=540, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=543, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=573, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=577, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=596, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=599, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=602, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=605, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=623, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=627, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=647, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=650, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=653, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=656, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=673, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=677, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=696, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=699, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=702, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=705, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=722, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=726, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=745, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=748, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=751, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=754, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=770, column=9)
Node Type: IfStatement
Condition: MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1076, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1077, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1094, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iterable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1095, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1112, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=it, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1113, column=13)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=it, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1132, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=array, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1135, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1154, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=iterable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1157, column=13)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=it, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1159, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=it, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1178, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=it, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1180, column=13)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=it, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1182, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=it, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1243, column=28)
Node Type: TernaryExpression
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1244, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1270, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1288, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1317, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=separator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=loopIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1344, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=loopIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1359, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1361, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1381, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=width, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1383, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1384, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1388, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=width, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1392, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1428, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=width, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1430, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1431, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1435, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=width, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1440, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1474, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1491, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1494, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1496, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1518, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1522, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1544, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1547, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1550, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1553, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1572, column=9)
Node Type: IfStatement
Condition: MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1684, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1698, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1699, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1701, column=17)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=['++'], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1702, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1721, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1722, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1738, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1739, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1741, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1756, column=25)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1757, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1759, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1808, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=insertLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=removeLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1813, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=insertLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1831, column=31)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=replaceStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1846, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=search, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=replace, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1847, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1848, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=search, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1865, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=search, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=replace, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1866, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1867, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=search, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1885, column=31)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1886, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1887, column=36)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=replaceStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1889, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1905, column=31)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=searchStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1906, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=searchLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1908, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1909, column=40)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=replaceStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1989, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=matcher, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1992, column=32)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=replaceStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1994, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=1996, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=removeLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2000, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=replaceCount, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2015, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2021, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2037, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2043, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=' '), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2046, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=' '), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2049, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2052, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2068, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2072, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2075, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2078, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2079, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2095, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2099, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2102, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2106, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2107, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2121, column=7)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2124, column=7)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2127, column=7)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2175, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2177, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2197, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2199, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2223, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2226, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2229, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2244, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2245, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=thisBuf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2296, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2297, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2301, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2302, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=thisBuf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2332, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2333, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2337, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2340, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2343, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2348, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2350, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2351, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=thisBuf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2387, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2388, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=matcher, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2393, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2394, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isMatch, postfix_operators=[], prefix_operators=[], qualifier=matcher, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2420, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2421, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2424, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2425, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2455, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2456, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2460, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2461, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2465, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2467, column=17)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2468, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=j, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2475, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=strLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2508, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2509, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=matcher, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2514, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2515, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=buf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isMatch, postfix_operators=[], prefix_operators=[], qualifier=matcher, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2647, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operandr=MemberReference(member=other, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2650, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=size, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=other, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2655, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2658, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=c1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=c2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=c1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=toUpperCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MemberReference(member=c2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=toUpperCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2673, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operandr=MemberReference(member=other, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2676, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=size, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=other, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2681, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2682, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=thisBuf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=otherBuf, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2698, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=StrBuilder, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2713, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2777, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2780, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2783, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=startIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=endIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2796, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2817, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2827, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2860, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=ready, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2869, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=off, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=off, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=b, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=off, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=b, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=off, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2873, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2876, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=StrBuilder, selectors=[MethodInvocation(arguments=[], member=size, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2879, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=size, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2890, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=StrBuilder, selectors=[MethodInvocation(arguments=[], member=size, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrBuilder
Line: Position(line=2893, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=n, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=253, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=input, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=409, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=421, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasPrevious, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=445, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=474, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=input, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=517, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasNext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=551, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=hasPrevious, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=603, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=604, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=636, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=644, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=649, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=663, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=tok, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=664, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isIgnoreEmptyTokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=667, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmptyTokenAsNull, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=688, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=692, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=removeLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getDelimiterMatcher, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isMatch, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getQuoteMatcher, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isMatch, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=701, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=708, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=delimLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=715, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=quoteLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=744, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=748, column=13)
Node Type: IfStatement
Condition: MemberReference(member=quoting, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=755, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=quoteStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=quoteLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isQuote, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=756, column=21)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=quoteLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=quoteStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=quoteLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isQuote, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=779, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=delimLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=786, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=quoteLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operandr=MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=quoteStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=quoteLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isQuote, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=794, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ignoredLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=803, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=trimmedLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=832, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=833, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))]), operandr=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=quoteStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None))]), operator=!=, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=860, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=delim, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=913, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=quote, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=957, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ignored, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=1001, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=trimmer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=1060, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=1093, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=cloned, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrTokenizer
Line: Position(line=1108, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=tokens, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=174, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=177, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=190, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=193, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=chars, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=206, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=301, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=binarySearch, postfix_operators=[], prefix_operators=[], qualifier=Arrays, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=334, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=368, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MemberReference(member=bufferEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=371, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=372, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=chars, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrMatcher
Line: Position(line=432, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.FormattableUtils
Line: Position(line=139, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=precision, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=precision, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=seq, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.FormattableUtils
Line: Position(line=144, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.FormattableUtils
Line: Position(line=145, column=24)
Node Type: TernaryExpression
Condition: MemberReference(member=leftJustify, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=146, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=158, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=pattern, selectors=[], type_arguments=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=159, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=172, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None))]), operandr=MemberReference(member=START_FMT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=176, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=format, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=181, column=39)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=format, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=184, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None))]), operandr=MemberReference(member=END_FE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=196, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=foundFormats, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsElements, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=201, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=203, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=f, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=265, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=268, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=271, column=9)
Node Type: IfStatement
Condition: SuperMethodInvocation(arguments=[MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=['!'], qualifier=None, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=274, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=obj, selectors=[], type_arguments=None)], member=notEqual, postfix_operators=[], prefix_operators=[], qualifier=ObjectUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=278, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=toPattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=toPattern, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[])], member=notEqual, postfix_operators=[], prefix_operators=[], qualifier=ObjectUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=281, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[])], member=notEqual, postfix_operators=[], prefix_operators=[], qualifier=ObjectUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=307, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=311, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=316, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=factory, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=335, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=337, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isWhitespace, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=340, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=START_FMT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=END_FE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=345, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=START_FMT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=END_FE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=||, prefix_operators=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=result, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=356, column=9)
Node Type: IfStatement
Condition: MemberReference(member=error, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=377, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=378, column=13)
Node Type: SwitchStatement
Condition: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=pattern, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=384, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=depth, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=405, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=customPatterns, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=containsElements, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=412, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=pattern, selectors=[], type_arguments=None), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=414, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=420, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=depth, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=425, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=customPattern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=450, column=9)
Node Type: DoStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=pattern, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=481, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=escapingOn, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), operandr=MemberReference(member=QUOTE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=483, column=20)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=appendTo, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=486, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=487, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=escapingOn, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substring, postfix_operators=[], prefix_operators=[], qualifier=pattern, selectors=[MethodInvocation(arguments=[MemberReference(member=ESCAPED_QUOTE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=startsWith, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=494, column=13)
Node Type: SwitchStatement
Condition: MemberReference(member=c, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MethodInvocation(arguments=[], member=getIndex, postfix_operators=[], prefix_operators=[], qualifier=pos, selectors=[], type_arguments=None))])
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=497, column=24)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=appendTo, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=525, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=coll, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=coll, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=528, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.ExtendedMessageFormat
Line: Position(line=529, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=name, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=89, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=92, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=newLineStr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=95, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=wrapLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=102, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=inputLineLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None), operandr=MemberReference(member=wrapLength, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=103, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=str, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=' '), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=109, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=spaceToWrapAt, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=117, column=17)
Node Type: IfStatement
Condition: MemberReference(member=wrapLongWords, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=125, column=21)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=spaceToWrapAt, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=201, column=30)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=202, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=delimLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=207, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=209, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isDelimiter, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=211, column=20)
Node Type: IfStatement
Condition: MemberReference(member=capitalizeNext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=270, column=30)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=271, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=delimLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=326, column=30)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=327, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MemberReference(member=delimLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=332, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=334, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isDelimiter, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=336, column=20)
Node Type: IfStatement
Condition: MemberReference(member=uncapitalizeNext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=368, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=375, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=377, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isUpperCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=380, column=20)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isTitleCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=383, column=20)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isLowerCase, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=384, column=17)
Node Type: IfStatement
Condition: MemberReference(member=whitespace, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=452, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=455, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=delimiters, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=462, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=465, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isDelimiter, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=467, column=20)
Node Type: IfStatement
Condition: MemberReference(member=lastWasGap, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=486, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=delimiters, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=489, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.WordUtils
Line: Position(line=490, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=ch, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=delimiter, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrLookup
Line: Position(line=162, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=map, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.StrLookup
Line: Position(line=166, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=57, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=options, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=71, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=options, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=81, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='&'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=seqEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=-, prefix_operators=None), operator=<, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='#'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=86, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=firstChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='x'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=firstChar, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='X'), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=91, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=seqEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=98, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=seqEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='0'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='9'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='a'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='A'), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='F'), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=107, column=13)
Node Type: IfStatement
Condition: MemberReference(member=semiNext, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=108, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=semiColonRequired, postfix_operators=[], prefix_operators=[], qualifier=OPTION, selectors=[])], member=isSet, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=111, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=errorIfNoSemiColon, postfix_operators=[], prefix_operators=[], qualifier=OPTION, selectors=[])], member=isSet, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=118, column=17)
Node Type: IfStatement
Condition: MemberReference(member=isHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=127, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=entityValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0xFFFF), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=135, column=38)
Node Type: TernaryExpression
Condition: MemberReference(member=isHex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityUnescaper
Line: Position(line=135, column=56)
Node Type: TernaryExpression
Condition: MemberReference(member=semiNext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.AggregateTranslator
Line: Position(line=51, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.AggregateTranslator
Line: Position(line=53, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=consumed, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.CharSequenceTranslator
Line: Position(line=54, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=input, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.CharSequenceTranslator
Line: Position(line=76, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=out, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.CharSequenceTranslator
Line: Position(line=79, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=input, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.CharSequenceTranslator
Line: Position(line=84, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=MemberReference(member=pos, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.CharSequenceTranslator
Line: Position(line=86, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=consumed, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.CharSequenceTranslator
Line: Position(line=94, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.OctalUnescaper
Line: Position(line=43, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='\\'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=[]), operator=<, prefix_operators=None), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None)], member=isDigit, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.OctalUnescaper
Line: Position(line=47, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None)], member=isDigit, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.OctalUnescaper
Line: Position(line=49, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=start, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=end, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=subSequence, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), operandr=MemberReference(member=OCTAL_MAX, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.LookupTranslator
Line: Position(line=49, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lookup, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.LookupTranslator
Line: Position(line=50, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.LookupTranslator
Line: Position(line=53, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=_shortest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.LookupTranslator
Line: Position(line=56, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=sz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=_longest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.LookupTranslator
Line: Position(line=71, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=longest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.LookupTranslator
Line: Position(line=75, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.LookupTranslator
Line: Position(line=78, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeUnescaper
Line: Position(line=37, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='\\'), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='u'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeUnescaper
Line: Position(line=40, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='u'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeUnescaper
Line: Position(line=44, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='+'), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeUnescaper
Line: Position(line=48, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=index, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=+, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=input, selectors=[], type_arguments=None), operator=<=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeEscaper
Line: Position(line=104, column=9)
Node Type: IfStatement
Condition: MemberReference(member=between, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeEscaper
Line: Position(line=105, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=below, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=above, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeEscaper
Line: Position(line=109, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=below, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=above, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeEscaper
Line: Position(line=115, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0xffff), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeEscaper
Line: Position(line=117, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0xfff), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeEscaper
Line: Position(line=119, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0xff), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.UnicodeEscaper
Line: Position(line=121, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0xf), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.EntityArrays
Line: Position(line=418, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityEscaper
Line: Position(line=104, column=9)
Node Type: IfStatement
Condition: MemberReference(member=between, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityEscaper
Line: Position(line=105, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=below, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=above, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.NumericEntityEscaper
Line: Position(line=109, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=below, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=codepoint, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=above, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.text.translate.CodePointTranslator
Line: Position(line=39, column=9)
Node Type: IfStatement
Condition: MemberReference(member=consumed, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=309, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=collection, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=326, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=327, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=e, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=475, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[MethodInvocation(arguments=[MemberReference(member=INNER_CLASS_SEPARATOR_CHAR, postfix_operators=[], prefix_operators=[], qualifier=ClassUtils, selectors=[])], member=indexOf, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=479, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=isTransient, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None), operandr=This(postfix_operators=[], prefix_operators=['!'], qualifier=None, selectors=[MethodInvocation(arguments=[], member=isAppendTransients, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=483, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=isStatic, postfix_operators=[], prefix_operators=[], qualifier=Modifier, selectors=[], type_arguments=None), operandr=This(postfix_operators=[], prefix_operators=['!'], qualifier=None, selectors=[MethodInvocation(arguments=[], member=isAppendStatics, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=487, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=excludeFieldNames, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=excludeFieldNames, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=binarySearch, postfix_operators=[], prefix_operators=[], qualifier=Arrays, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=509, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isArray, postfix_operators=[], prefix_operators=[], qualifier=clazz, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=515, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=517, column=13)
Node Type: IfStatement
Condition: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=field, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=accept, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=642, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=excludeFieldNamesParam, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=661, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=clazz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=663, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=[], qualifier=clazz, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=679, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getObject, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ReflectionToStringBuilder
Line: Position(line=684, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getSuperclass, postfix_operators=[], prefix_operators=[], qualifier=clazz, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=clazz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getUpToClass, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=186, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=188, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=208, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=210, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=m, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=212, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=356, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=359, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=pos1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=pos2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=pos1, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=pos2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=361, column=17)
Node Type: IfStatement
Condition: MemberReference(member=fieldSeparatorAtStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=377, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=381, column=13)
Node Type: IfStatement
Condition: MemberReference(member=fieldSeparatorAtStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=395, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=fieldSeparatorAtEnd, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=411, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=sepLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=sepLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=413, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=414, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=sepLen, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operandr=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=-, prefix_operators=None)], member=charAt, postfix_operators=[], prefix_operators=[], qualifier=fieldSeparator, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=419, column=13)
Node Type: IfStatement
Condition: MemberReference(member=match, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=441, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=471, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isRegistered, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Number, sub_type=None), operator=instanceof, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Boolean, sub_type=None), operator=instanceof, prefix_operators=None), operator=||, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Character, sub_type=None), operator=instanceof, prefix_operators=None), operator=||, prefix_operators=['!']), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=480, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Collection, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=481, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=487, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=[TypeArgument(pattern_type=?, type=None), TypeArgument(pattern_type=?, type=None)], dimensions=[], name=Map, sub_type=None), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=488, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=494, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=long), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=495, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=501, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=int), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=502, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=508, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=short), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=509, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=515, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=byte), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=516, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=522, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=char), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=523, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=529, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=double), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=530, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=536, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=float), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=537, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=543, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=boolean), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=544, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=550, column=20)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=value, selectors=[MethodInvocation(arguments=[], member=isArray, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=551, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=558, column=17)
Node Type: IfStatement
Condition: MemberReference(member=detail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=874, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=877, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=900, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=902, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=905, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=item, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=927, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=929, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=932, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=item, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=970, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=973, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=994, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=995, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1031, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1034, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1055, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1056, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1092, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1095, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1116, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1117, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1153, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1156, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1177, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1178, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1214, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1217, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1238, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1239, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1275, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1278, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1299, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1300, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1336, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1339, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1360, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1361, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1397, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1400, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=fullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isFullDetail, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1421, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1422, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1452, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=useClassName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1454, column=13)
Node Type: IfStatement
Condition: MemberReference(member=useShortClassName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1469, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=isUseIdentityHashCode, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1522, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=useFieldNames, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=fieldName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1574, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fullDetailRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1740, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=arrayStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1766, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=arrayEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1792, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=arraySeparator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1818, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=contentStart, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1844, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=contentEnd, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1870, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fieldNameValueSeparator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1896, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fieldSeparator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=1970, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=nullText, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=2002, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=sizeStartText, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=2034, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=sizeEndText, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=2066, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=summaryObjectStartText, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringStyle
Line: Position(line=2098, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=summaryObjectEndText, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=173, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isRegistered, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=180, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=181, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=excludeFields, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=contains, postfix_operators=[], prefix_operators=['!'], qualifier=ArrayUtils, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='$')], member=indexOf, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=useTransients, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=isTransient, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=field, selectors=[], type_arguments=None)], member=isStatic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=335, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=341, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getSuperclass, postfix_operators=[], prefix_operators=[], qualifier=clazz, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=clazz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=reflectUpToClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=468, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getRegistry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=489, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=494, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=registry, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=539, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=initialNonZeroOddNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=542, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=initialNonZeroOddNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=%, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=545, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=multiplierNonZeroOddNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=548, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=multiplierNonZeroOddNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=%, prefix_operators=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=577, column=39)
Node Type: TernaryExpression
Condition: MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=591, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=594, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=629, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=632, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=663, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=666, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=696, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=699, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=730, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=733, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=764, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=767, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=802, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=805, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=822, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=826, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=object, selectors=[MethodInvocation(arguments=[], member=isArray, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=829, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=long), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=831, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=int), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=833, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=short), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=835, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=char), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=837, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=byte), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=839, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=double), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=841, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=float), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=843, column=24)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=object, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=boolean), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=866, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=869, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=900, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=array, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.HashCodeBuilder
Line: Position(line=903, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=275, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=278, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=282, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=['!'], qualifier=lhsClazz, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=287, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getSuperclass, postfix_operators=[], prefix_operators=[], qualifier=lhsClazz, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=lhsClazz, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=reflectUpToClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=315, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=317, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=excludeFields, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None)], member=contains, postfix_operators=[], prefix_operators=['!'], qualifier=ArrayUtils, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='$')], member=indexOf, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=useTransients, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None)], member=isTransient, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None)], member=isStatic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=342, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=399, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=402, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=405, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=409, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=413, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[MethodInvocation(arguments=[], member=isArray, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=417, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=long), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=419, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=int), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=421, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=short), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=423, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=char), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=425, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=byte), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=427, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=double), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=429, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=float), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=431, column=20)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=boolean), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=440, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparator, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=463, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=466, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=466, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=479, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=482, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=482, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=495, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=498, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=498, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=511, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=514, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=514, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=527, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=530, column=22)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=530, column=42)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=>, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=548, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=569, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=585, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=588, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=591, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=648, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=651, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=654, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=658, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=662, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=663, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=666, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=688, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=691, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=694, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=698, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=702, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=703, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=706, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=728, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=731, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=734, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=738, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=742, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=743, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=746, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=768, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=771, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=774, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=778, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=782, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=783, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=786, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=808, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=811, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=814, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=818, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=822, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=823, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=826, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=848, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=851, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=854, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=858, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=862, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=863, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=866, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=888, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=891, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=894, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=898, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=902, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=903, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=906, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=928, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=931, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=934, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=938, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=942, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=943, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=946, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=968, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=comparison, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=971, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=974, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=978, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=982, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=983, column=26)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=<, prefix_operators=[])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.CompareToBuilder
Line: Position(line=986, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringBuilder
Line: Position(line=136, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=style, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringBuilder
Line: Position(line=253, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=style, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringBuilder
Line: Position(line=256, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringBuilder
Line: Position(line=975, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=superToString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringBuilder
Line: Position(line=1009, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=toString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.ToStringBuilder
Line: Position(line=1058, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getObject, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=173, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getRegistry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=197, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=203, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=registry, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=registry, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=326, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=329, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=339, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=[], qualifier=lhsClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=341, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=['!'], qualifier=rhsClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=345, column=16)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=[], qualifier=rhsClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=347, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isInstance, postfix_operators=[], prefix_operators=['!'], qualifier=lhsClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=358, column=13)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getSuperclass, postfix_operators=[], prefix_operators=[], qualifier=testClass, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=testClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=reflectUpToClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=!=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=392, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=isRegistered, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=400, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=402, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=excludeFields, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None)], member=contains, postfix_operators=[], prefix_operators=['!'], qualifier=ArrayUtils, selectors=[], type_arguments=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='$')], member=indexOf, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator===, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=useTransients, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None)], member=isTransient, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None), operator=||, prefix_operators=[]), operator=&&, prefix_operators=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getModifiers, postfix_operators=[], prefix_operators=[], qualifier=f, selectors=[], type_arguments=None)], member=isStatic, postfix_operators=[], prefix_operators=['!'], qualifier=Modifier, selectors=[], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=430, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=448, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=451, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=454, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=459, column=9)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[], member=isArray, postfix_operators=[], prefix_operators=['!'], qualifier=lhsClass, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=462, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getClass, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[], type_arguments=None), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=468, column=14)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=long), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=470, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=int), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=472, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=short), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=474, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=char), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=476, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=byte), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=478, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=double), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=480, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=float), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=482, column=16)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=boolean), operator=instanceof, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=503, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=518, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=533, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=548, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=563, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=584, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=604, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=618, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=636, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=639, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=642, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=646, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=650, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=667, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=670, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=673, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=677, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=681, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=698, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=701, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=704, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=708, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=712, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=729, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=732, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=735, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=739, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=743, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=760, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=763, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=766, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=770, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=774, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=791, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=794, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=797, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=801, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=805, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=822, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=825, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=828, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=832, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=836, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=853, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=856, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=859, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=863, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=867, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=884, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=isEquals, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=887, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=890, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=lhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=rhs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=894, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=lhs, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=rhs, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.builder.EqualsBuilder
Line: Position(line=898, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.builder.IDKey
Line: Position(line=64, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=other, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=IDKey, sub_type=None), operator=instanceof, prefix_operators=['!'])
==================================================

==================================================
Class: org.apache.commons.lang3.builder.IDKey
Line: Position(line=68, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=id, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=id, postfix_operators=[], prefix_operators=[], qualifier=idKey, selectors=[]), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=142, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=146, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=methodNames, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=150, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=151, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=methodName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=153, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=cause, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=181, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=size, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=202, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getReturnType, postfix_operators=[], prefix_operators=[], qualifier=method, selectors=[], type_arguments=None)], member=isAssignableFrom, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=Throwable, sub_type=None)), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=282, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None), operandr=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=contains, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator===, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=387, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=type, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=390, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fromIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=<, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=394, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=fromIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=throwables, selectors=[]), operator=>=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=397, column=9)
Node Type: IfStatement
Condition: MemberReference(member=subclass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=398, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=399, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=throwables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getClass, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])], member=isAssignableFrom, postfix_operators=[], prefix_operators=[], qualifier=type, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=404, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=405, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=throwables, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getClass, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=type, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=456, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=459, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=stream, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=463, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=489, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=492, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=writer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=496, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=517, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=524, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=526, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=530, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BinaryOperation(operandl=MemberReference(member=count, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-, prefix_operators=None), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=535, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=551, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=causeFrames, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=wrapperFrames, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=556, column=9)
Node Type: WhileStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=causeFrameIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operandr=BinaryOperation(operandl=MemberReference(member=wrapperFrameIndex, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>=, prefix_operators=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=561, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=wrapperFrame, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=[], prefix_operators=[], qualifier=causeFrame, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=603, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=throwable, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=622, column=9)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasMoreTokens, postfix_operators=[], prefix_operators=[], qualifier=frames, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=646, column=9)
Node Type: WhileStatement
Condition: MethodInvocation(arguments=[], member=hasMoreTokens, postfix_operators=[], prefix_operators=[], qualifier=frames, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=650, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=at, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1), operator=!=, prefix_operators=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), MemberReference(member=at, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=substring, postfix_operators=[], prefix_operators=[], qualifier=token, selectors=[MethodInvocation(arguments=[], member=trim, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=isEmpty, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=&&, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=653, column=20)
Node Type: IfStatement
Condition: MemberReference(member=traceStarted, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=672, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=th, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ExceptionUtils
Line: Position(line=693, column=16)
Node Type: TernaryExpression
Condition: BinaryOperation(operandl=MemberReference(member=root, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=63, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=65, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=label, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getKey, postfix_operators=[], prefix_operators=[], qualifier=p, selectors=[], type_arguments=None)], member=equals, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=79, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=80, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=label, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getKey, postfix_operators=[], prefix_operators=[], qualifier=pair, selectors=[], type_arguments=None)], member=equals, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=92, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=93, column=13)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=label, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[], member=getKey, postfix_operators=[], prefix_operators=[], qualifier=pair, selectors=[], type_arguments=None)], member=equals, postfix_operators=[], prefix_operators=[], qualifier=StringUtils, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=106, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=129, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=baseMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=133, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=size, postfix_operators=[], prefix_operators=[], qualifier=contextValues, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=134, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=140, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.exception.DefaultExceptionContext
Line: Position(line=147, column=17)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ContextedException
Line: Position(line=147, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.exception.ContextedRuntimeException
Line: Position(line=147, column=9)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.event.EventUtils
Line: Position(line=111, column=13)
Node Type: IfStatement
Condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=eventTypes, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=method, selectors=[], type_arguments=None)], member=contains, postfix_operators=[], prefix_operators=[], qualifier=eventTypes, selectors=[], type_arguments=None), operator=||, prefix_operators=None)
==================================================

==================================================
Class: org.apache.commons.lang3.event.EventUtils
Line: Position(line=112, column=17)
Node Type: IfStatement
Condition: MethodInvocation(arguments=[MemberReference(member=method, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=hasMatchingParametersMethod, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
==================================================

==================================================
Class: org.apache.commons.lang3.event.EventListenerSupport
Line: Position(line=225, column=9)
Node Type: ForStatement
Condition: N/A
==================================================

==================================================
Class: org.apache.commons.lang3.event.EventListenerSupport
Line: Position(line=312, column=13)
Node Type: ForStatement
Condition: N/A
==================================================

